add2 <- function(x, y){
x + y
}
add2(4,5)
above <- function(x, n){
use <- x > n
x[use]
}
x <- 1:20
above(x, 10)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
install.packages(slidify)
install.packages("slidify")
install.packages(c("class", "foreign", "MASS", "nlme", "nnet", "spatial"))
install.packages("KernSmooth")
library(KernSmooth)
source('~/Personal/Tutorials/Coursera/RDir/ProgrammingAssignment2/cachematrix.R')
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(m)
source('~/Personal/Tutorials/Coursera/RDir/ProgrammingAssignment2/cachematrix.R')
source('~/Personal/Tutorials/Coursera/RDir/ProgrammingAssignment2/cachematrix.R')
source('~/Personal/Tutorials/Coursera/RDir/ProgrammingAssignment2/cachematrix.R')
install.packages("RMySQL")
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/mySql.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/mySql.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/mySql.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/mySql.R')
install.packages("RMySQL", type = "Sources")
install.packages("RMySQL")
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/mySql.R')
length(allTables)
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/mySql.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
install.packages("httpuv")
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
content(req)
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
json2[1, 1:4]
json2[1, 1:6]
json2
json2[7, 1:6]
json2[7, 1:10]
json2[7, 1:15]
json2[7, 1:25]
json2[7,]
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/API.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/html.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/html.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/html.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/html.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/html.R')
c(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/html.R')
cnt
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/forFile.R')
sum(d[, 4])
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/forFile.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/plyr.R')
install.packages("lubridate")
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/plyr.R')
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/swirl.R')
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim()
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, counry)
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -5:20)
select(cran, X:size)
-5:20
-(5:20)
cran
select(cran, -(X:size))
filter(cran, package = "swirl")
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
info()
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, r_version == !is.na("NA"))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cron3, size_mb = size /2^20)
mutate(cran3, size_mb = size /2^20)
mutate(cran3, size_mb = size /2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
summarise(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
cran
summarize(cran, avg_bytes = mean(size))
info()
skip()
swirl()
swirl()
summarize(cran, avg_bytes = mean(size))
grouped <- group_by(cran, size)
summarize(cran, avg_bytes = mean(size))
summarize(cran, avg = mean(size))
getAnywhere(summarize())
library("dplyr")
summarize(cran, avg_bytes = mean(size))
info()
skip()
swirl()
dplyr[]
summarise(cran, avg_bytes = mean(size))
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/swirl.R')
summarize(cran, avg_bytes = mean(size))
skip()
swirl()
5+7
x <- 5+7
x
y <- x-3
y
c(1.1,9,3,14)
z <- c(1.1,9,3,14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
source('~/Personal/Tutorials/Coursera/GettingAndCleaningData/swirl.R')
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, avg_size = mean(size))
summarize(by_package, mean(size))
?n
?n_distinct
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/summarize1.R')
pack_sum
submit()
tbl(by_package)
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(pack_sum, desc(count))
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/summarize2.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/summarize3.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/summarize4.R')
submit()
View(result3)
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/chain1.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/chain2.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/chain2.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/chain2.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/chain2.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/chain2.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/chain3.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/chain4.R')
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script1.R')
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script1.R')
submit()
students3
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script2.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script2.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script2.R')
submit()
?spread
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script3.R')
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script3.R')
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script3.R')
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script3.R')
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script3.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script3.R')
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script3.R')
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script3.R')
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script3.R')
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script3.R')
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script2.R')
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script3.R')
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script3.R')
submit()
extract_numeric("class5")
?mutate
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script4.R')
submit()
students4
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script5.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script6.R')
?unique
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script6.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script7.R')
submit()
passed
failed
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?bind_rows
bind_rows(passed, failed)
sat
?select
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script8.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script8.R')
submit()
source('/var/folders/gz/vrd25xgx4f5234vtw8023zf40000gn/T//RtmpscNquA/script9.R')
submit()
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
xyplot(weight ~ Time | Diet, BodyWeight)
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
p
p
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
print(p)
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
#qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
qplot(Wind, Ozone, data = airquality, geom = "smooth")
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
#qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
qplot(votes, rating, data = movies, smooth = "loess")
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
qplot(votes, rating, data = movies, panel = panel.loess)
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
qplot(votes, rating, data = movies) + geom_smooth()
source('~/Personal/Tutorials/Coursera/ExploratoryDataAnalysis/Quiz2.R')
qplot(votes, rating, data = movies, smooth = "loess")
install.packages(timeDate)
knit2html()
install.packages(knitr)
source('~/Personal/Tutorials/Coursera/ReproducibleResearch/RepData_PeerAssessment1/Untitled.R')
